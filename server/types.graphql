type Restaurant @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String!
  subName: String
  categories: [String!]!
  amenities: [String!]
  streetAddress: String!
  city: String!
  state: String!
  zip: String!
  phone: String!
  email: String
  website: String
  imageUrl: String! @migrationValue(value: "")
  
  storyId: Story @relation(name: "RestaurantStory")
  thumbsUpId: ThumbsUp @relation(name: "RestaurantThumbsUp")
}

type Story @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  description: String! 
  images: [String!]! 

  restaurantId: Restaurant @relation(name: "RestaurantStory")
  qna: [QnA!]! @relation(name: "StoryQnA")
}

type ThumbsUp @model {
  id: ID! @isUnique
  updatedAt: DateTime!

  food: Int!
  service: Int!
  atmosphere: Int!

  restaurantId: Restaurant @relation(name: "RestaurantThumbsUp")
}

type Review @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  title: String!
  description: String!

  userId: NotAUser @relation(name: "ReviewUser")
}

type NotAUser @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  firstName: String!
  lastName: String!

  reviews: [Review!]! @relation(name: "ReviewUser")
}

type QnA @model {
  id: ID! @isUnique

  question: String!
  answer: String!

  storyId: Story @relation(name: "StoryQnA")
}