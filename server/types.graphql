type Foodie @model{
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  firstName: String!
  lastName: String!
  username: String!
  authEmail: String!
  password: String!
  phone: String
  profileImage: String
  isOwner: Boolean! @defaultValue(value: false)

  restaurantID: Restaurant @relation(name: "FoodieRestaurant")
  reviews: [Review!]! @relation(name: "FoodieReview")
}

type Restaurant @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String!
  subName: String
  categories: [String!]!
  amenities: [String!]
  streetAddress: String!
  city: String!
  state: String!
  zip: String!
  phone: String!
  email: String
  website: String
  imageUrl: String!
  
  foodieID: Foodie @relation(name: "FoodieRestaurant")
  storyId: Story @relation(name: "RestaurantStory")
  thumbsUpId: ThumbsUp @relation(name: "RestaurantThumbsUp")
  amenitiesList: [Amenity!]! @relation(name: "ResturantAmenities")
}

type Story @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  description: String! 
  images: [String!]! 

  restaurantId: Restaurant @relation(name: "RestaurantStory")
  contents: [Content!]! @relation(name: "StoryContent")
}

type Amenity @model {
  id: ID! @isUnique

  name: String!
  color: String!
  extraSymbol: String

  restaurantId: Restaurant @relation(name: "ResturantAmenities")
}

type ThumbsUp @model {
  id: ID! @isUnique
  updatedAt: DateTime!

  food: Int!
  service: Int!
  atmosphere: Int!

  restaurantId: Restaurant @relation(name: "RestaurantThumbsUp")
}

type Review @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  title: String!
  description: String!

  foodieId: Foodie @relation(name: "FoodieReview")
}

type Content @model {
  id: ID! @isUnique

  title: String!
  text: String!
  position: Int!

  storyId: Story @relation(name: "StoryContent")
}